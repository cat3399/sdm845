image: alpine:latest
variables:
  FLAVOR: postmarketos-qcom-sdm845
  PACKAGE: device/community/linux-$FLAVOR
  PMBOOTSTRAP_URL: https://gitlab.com/sdm845-mainline/pmbootstrap.git
  PMBOOTSTRAP_TAG: caleb/allow-untrusted-hack
after_script:
  - ./ci/move_logs.sh $CI_PROJECT_DIR
stages:
  - merge
  - build
  - test
  - pmaports

workflow:
  name: '$PROJECT_PIPELINE_NAME'
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^sdm845\/.+-dev$/
      variables:
        PROJECT_PIPELINE_NAME: build and boot test for $CI_COMMIT_BRANCH
        PIPELINE: "build-dev"
    - if: $CI_COMMIT_BRANCH =~ /^sdm845\/.+-release$/ && $CI_COMMIT_AUTHOR != "SDM845 CI <sdm845-ci@blah.com>"
      variables:
        PROJECT_PIPELINE_NAME: Upgrade to latest stable tag
        PIPELINE: "build-release"
    # Merge request pipeline
    - if: $CI_MERGE_REQUEST_ID
      variables:
        PROJECT_PIPELINE_NAME: build and boot test for $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
        PIPELINE: "build-mr"
    - if: $CI_COMMIT_TAG =~ /^sdm845-.*$/
      when: never

merge-stable:
  stage: merge
  rules:
    - if: $PIPELINE == "build-release"
  before_script:
    - ./ci/apk_retry.sh add git make curl jq xz patch openssh sudo
    - wget "https://gitlab.com/postmarketOS/ci-common/-/raw/master/install_pmbootstrap.sh" -O /tmp/install_pmbootstrap.sh
    - sh /tmp/install_pmbootstrap.sh
  script:
    # Run as non-root because we'll be messing with the git repo
    # but preserve environment variables
    - sudo -E -u pmos ./ci/merge_stable.sh
  artifacts:
    paths: [latest_stable_tag]

.build:
  stage: build
  before_script:
    # Add pmbootstrap repo for cross compiler toolchain
    - echo "http://mirror.postmarketos.org/postmarketos/master" >> /etc/apk/repositories
    - '[[ -z "$USE_PREV_ARTIFACTS" ]] && ./ci/apk_retry.sh add --allow-untrusted bash bison findutils flex installkernel openssl-dev perl zstd gcc gcc-aarch64 wget make git musl-dev sudo'
    - wget "https://gitlab.com/postmarketOS/ci-common/-/raw/master/install_pmbootstrap.sh" -O /tmp/install_pmbootstrap.sh
    - sh /tmp/install_pmbootstrap.sh
    - git config --global --add safe.directory $CI_PROJECT_DIR
  script:
    - '[[ -n "$USE_PREV_ARTIFACTS" ]] && ./ci/bypass_build.sh $USE_PREV_ARTIFACTS && exit 0'
    # Ref to build might be an artifact from a previous job
    - CHECKOUT_REF=$(cat latest_stable_tag || git rev-parse --verify HEAD)
    - git checkout $CHECKOUT_REF
    - echo "Building $PACKAGE at ref $CHECKOUT_REF"
    - make CROSS_COMPILE=aarch64-alpine-linux-musl- ARCH=arm64 defconfig sdm845.config
    - cp .config /home/pmos/.local/var/pmbootstrap/cache_git/pmaports/$PACKAGE/config-${FLAVOR}.aarch64
    - KVER=$(make kernelversion | sed 's/-/_/')
    - sed -i /home/pmos/.local/var/pmbootstrap/cache_git/pmaports/$PACKAGE/APKBUILD -e "s/^pkgver=.*/pkgver=$KVER/"
    - sed -i /home/pmos/.local/var/pmbootstrap/cache_git/pmaports/$PACKAGE/APKBUILD -e "s/^pkgrel=.*/pkgrel=0/"
    - sed -i /home/pmos/.local/var/pmbootstrap/cache_git/pmaports/$PACKAGE/APKBUILD -e "s/^_tag=.*/_tag=$CHECKOUT_REF/"
    - sudo -u pmos -- pmbootstrap checksum linux-${FLAVOR}
    - sudo -u pmos -- env PYTHONUNBUFFERED=1 pmbootstrap --details-to-stdout build --force linux-${FLAVOR}
  after_script:
    - mkdir -p packages
    - echo "linux-$FLAVOR" >> packages/packages
    - cp -r /home/pmos/.local/var/pmbootstrap/packages/edge packages/ || true
    # Save the modified package sources for the pmaports MR
    - cp -r /home/pmos/.local/var/pmbootstrap/cache_git/pmaports/$PACKAGE packages/ || true
    - cp latest_stable_tag packages/ || true
    - 'true'
  artifacts:
    expire_in: 1 week
    paths:
      - packages/
  timeout: 10 h

# Plain old build for -dev branches and merge requests
build-dev:
  extends: .build
  # NOTE: this is a hack to bypass the build by reusing artifacts from a previous build.
  # It's here for testing the boot-test job
  # variables:
  #   USE_PREV_ARTIFACTS: https://gitlab.com/sdm845-mainline/linux/-/jobs/5161887969/artifacts/raw/packages/edge/aarch64/linux-postmarketos-qcom-sdm845-6.6.0_rc2-r0.apk
  rules:
    - if: $PIPELINE != "build-release"

# Get the latest stable tag from the merge_stable job
# and build that
build-release:
  extends: .build
  rules:
    - if: $PIPELINE == "build-release"
  needs:
    - job: merge-stable
      artifacts: true

.boot-test:
  stage: test
  variables:
    ADDITIONAL_PKGS_JOB: "5180486159"
  before_script:
    - '[ -z $CDBA_SSH_KEY ] && echo CDBA_SSH_KEY not set! && exit 1'
    - ./ci/apk_retry.sh add --allow-untrusted wget curl openssh # gitlab_api
    - wget "https://gitlab.com/postmarketOS/ci-common/-/raw/master/install_pmbootstrap.sh" -O /tmp/install_pmbootstrap.sh
    - sh /tmp/install_pmbootstrap.sh
    - mkdir -p /home/pmos/.local/var/pmbootstrap/packages/edge/aarch64/ /home/pmos/.local/var/pmbootstrap/config_apk_keys
    # Get the kernel package from the build job
    - cp -r packages/edge/aarch64/* /home/pmos/.local/var/pmbootstrap/packages/edge/aarch64/
    - chown -R pmos:pmos /home/pmos/.local/var/pmbootstrap/packages/
    - chmod -R 777 /home/pmos/.local/var/pmbootstrap/packages/
    - ./ci/key_from_apkindex.sh /home/pmos/.local/var/pmbootstrap/packages/edge/aarch64/APKINDEX.tar.gz kernel-dev
    - ls -la /home/pmos/.local/var/pmbootstrap/config_apk_keys
  script:
    - sudo -E -u pmos -- ./ci/build_boot_img.sh
    - ./ci/boot.sh
    - cp /home/pmos/.local/var/pmbootstrap/chroot_rootfs_$DEVICE/boot/boot.img boot-$DEVICE.img
  needs:
    - job: build-dev
      artifacts: true
  artifacts:
    expire_in: 1 week
    paths:
      - log.txt
      - cdba.log
      - boot-$DEVICE.img
  parallel:
    matrix:
      - CDBA_DEVICE: sdm845-enchilada-1
        DEVICE: oneplus-enchilada
      - CDBA_DEVICE: sdm845-fajita-1
        DEVICE: oneplus-fajita

boot-test:
  extends: .boot-test
  rules:
    - if: $PIPELINE == "build-dev"

# Manual boot test in merge request pipeline
boot-test-mr:
  extends: .boot-test
  # These are protected variables, they're only accessable when this job runs under
  # the main repo, not under a fork. The "when: manual" setting causes this job to be
  # run in the parent repo.
  when: manual
  variables:
    CDBA_SSH_KEY: $CDBA_SSH_KEY
    SDM845_CI_TOKEN: $SDM845_CI_TOKEN
  rules:
    - if: $PIPELINE == "build-mr"

open-pmaports-mr:
  stage: pmaports
  rules:
    - if: $PIPELINE == "build-release"
  needs:
    - job: build-release
      artifacts: true
  script:
    - ./ci/apk_retry.sh add sudo openssh jq
    - apk add curl
    - wget "https://gitlab.com/postmarketOS/ci-common/-/raw/master/install_pmbootstrap.sh"
    - sh ./install_pmbootstrap.sh
    - cp -r packages/$(basename $PACKAGE)/* /home/pmos/.local/var/pmbootstrap/cache_git/pmaports/$PACKAGE/
    - PKG="$(echo $PACKAGE | cut -d'/' -f2,3)"
    - if [ ! -f packages/latest_stable_tag ]; then echo "No latest_stable_tag found"; ls packages/; exit 1; fi
    - TAG=$(cat packages/latest_stable_tag)
    - sudo -E -u pmos -- /bin/sh $PWD/ci/pmaports.sh "$PKG" "$TAG"
